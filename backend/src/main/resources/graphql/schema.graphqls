enum Role {
  MAKEUP
  HAIR
  MANAGER
  ADMIN
}

type Staff {
  id: ID!
  name: String!
  role: Role!
  email: String!
  password: String!
}

type Client {
  id: ID!
  name: String!
  phone: String!
}

type Service {
  id: ID!
  name: String!
  basePrice: Float!
}


type StaffService {
    staffId: ID!
    serviceId: ID!
    customPrice: Float
}
type ProductPurchase {
  id: ID!
  staff: Staff!
  productName: String!
  amountSpent: Float!
  date: String! # consider custom scalar Date
}

type Transaction {
  id: ID!
  clientName: String!
  staffId: ID!
  serviceId: ID!
  amountPaid: Float!
  percentageGiven: Float
  percentageRecipientId: ID
  date: String!
  time: String!
}
type Rent {
  id: ID!
  staffId: ID!
  month: String!
  amount: Float!
  paidDate: String!
}
type Query {
  allStaff: [Staff!]!
  getStaffById(id: ID!): Staff

  allClients: [Client!]!
  getClientById(id: ID!): Client

  allServices: [Service!]!
  getServiceById(id: ID!): Service

  getRent(staffId: ID!, month: String!): Rent


  allProductPurchases(staffId: ID): [ProductPurchase]!
     getTotalPurchasesAmount(staffId: ID!): Float
    getSumPurchasesLastWeek(staffId: ID!): Float
    getSumPurchasesLastMonth(staffId: ID!): Float
    getSumPurchasesLastYear(staffId: ID!): Float

  allTransactions(staffId:ID): [Transaction!]!
  getTotalTransactionsAmount: Float!
getSumLastWeek(staffId: ID!): Float!
getSumLastMonth(staffId: ID!): Float! 
getSumLastYear(staffId: ID!): Float!

  getServicesByStaffId(staffId: ID!): [Service!]!

    getAllKatiaWork: [KatiaWork!]!
    getKatiaWorkById(id: ID!): KatiaWork
  # getStaffServices: [StaffService!]!
  # getStaffService(staffId: ID!, serviceId: ID!): StaffService

  
}

type Mutation {
  deleteStaff(id: ID!): Boolean!
  login(email: String!, password: String!): LoginResponse!

  createStaff(name: String!, role: Role!, email: String!, password: String!): Staff

  createClient(name: String!, phone: String!): Client

  createService(name: String!, basePrice: Float!): Service

  createStaffService(staffId: ID!, serviceId: ID!, customPrice: Float): StaffService!

  createKatiaWork(input: KatiaWorkInput!): KatiaWork!
  
  addRent(staffId: ID!, month: String!, amount: Float!): Rent
  updateRent(id: ID!, amount: Float!): Rent

  createProductPurchase(
    staffId: ID!
    productName: String!
    amountSpent: Float!
    date: String!
  ): ProductPurchase

createTransaction(
  clientName: String!
  staffId: ID!
  serviceId: ID!
  amountPaid: Float!
  percentageGiven: Float
  percentageRecipientId: ID
  date: String!
  time: String!
): Transaction


}

type LoginResponse {
  token: String!
  staff: Staff!
}

type KatiaWork {
    id: ID!
    clientName: String!
    serviceDate: String!
    grossAmount: Float!
    dimaCut: Float!
    tamerPercent: Float!
    tamerCut: Float!
    katiaNet: Float!
}

input KatiaWorkInput {
    clientName: String!
    serviceDate: String!
    grossAmount: Float!
    tamerPercent: Float!
}